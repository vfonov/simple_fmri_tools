PROJECT (SIMPLE_FMRI_TOOLS)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
if(COMMAND cmake_policy)
 cmake_policy(SET CMP0003 OLD)
endif(COMMAND cmake_policy)

SET(PACKAGE "simple_fmri_tools")
SET(PACKAGE_BUGREPORT "Vladimir Fonov <vladmir.fonov@gmail.com>")

SET(PACKAGE_NAME "simple_fmri_tools")
SET(PACKAGE_VERSION "0.0.1")
SET(PACKAGE_STRING  "${PACKAGE_NAME} ${PACKAGE_VERSION}")

SET(CPACK_PACKAGE_NAME ${PACKAGE_NAME})
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Simple fMRI  processing tools")
SET(CPACK_PACKAGE_VENDOR "Brain Imaging Center, Montreal Neurological Institute, McGill University")
SET(CPACK_PACKAGE_VERSION_MAJOR 0)
SET(CPACK_PACKAGE_VERSION_MINOR 0)
SET(CPACK_PACKAGE_VERSION_PATCH 1)
SET(CPACK_PACKAGE_CONTACT ${PACKAGE_BUGREPORT})
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "simple-fmri-tools-${PACKAGE_VERSION}")
SET(CPACK_MONOLITHIC_INSTALL ON)
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README.md")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING.txt")

EXEC_PROGRAM(uname ARGS "-m" OUTPUT_VARIABLE CMAKE_SYSTEM_PROCESSOR)

SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${CMAKE_SOURCE_DIR}/cmake-modules")

SET(CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
SET(CPACK_STRIP_FILES ON)

SET(SYSTEM_NAME ${CPACK_SYSTEM_NAME})

IF(NOT DEFINED CPACK_SYSTEM_NAME)
  SET(SYSTEM_NAME ${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR})
ENDIF(NOT DEFINED CPACK_SYSTEM_NAME)


IF(${CMAKE_SYSTEM_NAME} MATCHES Windows)
  IF(CMAKE_CL_64)
    SET(SYSTEM_NAME win64-${CMAKE_SYSTEM_PROCESSOR})
  ELSE(CMAKE_CL_64)
    SET(SYSTEM_NAME win32-${CMAKE_SYSTEM_PROCESSOR})
  ENDIF(CMAKE_CL_64)
ELSE(${CMAKE_SYSTEM_NAME} MATCHES Windows)
  IF(${CMAKE_SYSTEM_NAME} MATCHES Linux )
    EXEC_PROGRAM(lsb_release ARGS "-s -i" OUTPUT_VARIABLE SYSTEM_ID)
    EXEC_PROGRAM(lsb_release ARGS "-s -r" OUTPUT_VARIABLE SYSTEM_RELEASE)
    SET(SYSTEM_NAME "${SYSTEM_ID}_${SYSTEM_RELEASE}-${CMAKE_SYSTEM_PROCESSOR}")
  ENDIF(${CMAKE_SYSTEM_NAME} MATCHES Linux )
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES Windows)

SET(CPACK_PACKAGE_FILE_NAME "volume_tools-${PACKAGE_VERSION}-${SYSTEM_NAME}")

FIND_PACKAGE( LIBMINC REQUIRED )
FIND_PACKAGE( FFTW3F REQUIRED )
INCLUDE( ${LIBMINC_USE_FILE} )

if (USE_OPENMP)
    FIND_PACKAGE(OpenMP)
    if(OPENMP_FOUND)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
        message(WARNING "OpenMP is not actually used right now")
    else()
        message(WARNING "OpenMP NOT found")
    endif()
endif()

INCLUDE_DIRECTORIES(${FFTW3F_INCLUDE_DIRS})
add_subdirectory(src)

# according to http://www.cmake.org/pipermail/cmake/2011-November/047137.html it's better to put this in the end
INCLUDE(CPack)
